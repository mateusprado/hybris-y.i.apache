#Load the SSL module that is needed to terminate SSL on Apache
LoadModule ssl_module modules/mod_ssl.so

#We don't want to pass Apache server status to the Jetty server
ProxyPass /server-status !

SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
SSLSessionCacheTimeout  300
Mutex default
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
SSLCryptoDevice builtin

#Location for SSL error logs
ErrorLog logs/ssl_error_log

#Location for SSL traffic logs
TransferLog logs/ssl_access_log

#Log level, this can be emrg, alert, crti, error, warn, notice, info, or debug
#See https://httpd.apache.org/docs/2.2/mod/core.html#loglevel for details
LogLevel warn

#Dont' use SSLv2, instead use SSLv3 and TLSv1
SSLProtocol all -SSLv2

#When choosing a cipher during an SSLv3 ot TLSv1 handshake, normally the client's preference is used. We want Apache to use the server's preference.
SSLHonorCipherOrder On

#SSL Tuning. We want to optimize our SSL chipher by removing some and adding other
SSLCipherSuite ALL:!ADH:!EXP:!LOW:!RC2:!3DES:!SEED:!RC4:+HIGH:+MEDIUM

#SSL certificate file location
#you can generate a self signed certificate file using this command
#$sudo openssl req -x509 -newkey rsa:2048 -keyout apache.key -out apache.crt -days 999 -nodes
#the ca.crt file is a certificate chain file
SSLCertificateFile /etc/httpd/certs/apache.crt

#SSL private key file location
SSLCertificateKeyFile /etc/httpd/certs/apache.key

#This directive sets the all-in-one file where you can assemble the Certificates of Certification Authorities (CA) whose clients you deal with.
#SSLCACertificateFile /etc/httpd/certs/ca.crt

Listen 8080
Listen 8443

<VirtualHost *:8080>
    Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
    <Location /balancer-manager>
        SetHandler balancer-manager
    </Location>
    <Proxy balancer://ycluster>

        BalancerMember http://acc_1:9001 route=acc_1
        BalancerMember http://acc_2:9001 route=acc_2

        ProxySet stickysession=ROUTEID
    </Proxy>
    ProxyPass / balancer://ycluster/ nocanon
    ProxyPassReverse / balancer://ycluster/
</VirtualHost>

<VirtualHost *:8443>
    Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
    SSLEngine on
    <Location /balancer-manager>
        SetHandler balancer-manager
    </Location>
    <Proxy balancer://ycluster>

        BalancerMember http://acc_1:9002 route=acc_1
        BalancerMember http://acc_2:9002 route=acc_2

        ProxySet stickysession=ROUTEID
    </Proxy>
    ProxyPass / balancer://ycluster/ nocanon
    ProxyPassReverse / balancer://ycluster/
</VirtualHost>

ProxyTimeout 60
ProxyPreserveHost On
ProxyStatus On
SetEnv proxy-nokeepalive 0
